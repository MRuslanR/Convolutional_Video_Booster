import streamlit as st
import numpy as np
from video_processing import enhance_video
from config import EXAMPLES

st.set_page_config(
    page_title="–°–≤–µ—Ä—Ç–æ—á–Ω—ã–π –í–∏–¥–æ—É—Å–∏–ª–∏—Ç–µ–ª—å",
    page_icon="üé¨",
    layout="wide"
)


def main():
    st.title("üé¨ –°–≤–µ—Ä—Ç–æ—á–Ω—ã–π –í–∏–¥–æ—É—Å–∏–ª–∏—Ç–µ–ª—å")

    if 'current_filter' not in st.session_state:
        st.session_state.current_filter = "–ü–æ–≤—ã—à–µ–Ω–∏–µ —Ä–µ–∑–∫–æ—Å—Ç–∏"
        st.session_state.kernel = EXAMPLES["–ü–æ–≤—ã—à–µ–Ω–∏–µ —Ä–µ–∑–∫–æ—Å—Ç–∏"]

    # –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    uploaded_file = st.file_uploader("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª", type=["mp4", "avi", "mov"])

    # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    with st.sidebar:
        st.header("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–µ—Ä—Ç–∫–∏")

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
        st.markdown(f"**–ê–∫—Ç–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä:** `{st.session_state.current_filter}`")
        kernel_input = st.text_input(
            "–ú–∞—Ç—Ä–∏—Ü–∞ 3x3 (9 —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):",
            value=", ".join(map(str, st.session_state.kernel.flatten())),
            help="–ü—Ä–∏–º–µ—Ä: -1, -1, -1, -1, 9, -1, -1, -1, -1",
            key="kernel_input"
        )

        st.subheader("üìö –ü—Ä–µ—Å–µ—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤")
        cols = st.columns(2)
        for idx, (name, example) in enumerate(EXAMPLES.items()):
            with cols[idx % 2]:
                is_active = name == st.session_state.current_filter
                btn_label = f"‚úÖ {name}" if is_active else f"‚öôÔ∏è {name}"
                if st.button(
                        btn_label,
                        help=f"–ú–∞—Ç—Ä–∏—Ü–∞: {example.tolist()}",
                        use_container_width=True
                ):
                    st.session_state.current_filter = name
                    st.session_state.kernel = example
                    st.rerun()

    if uploaded_file:
        if st.button("üöÄ –ü–†–ò–ú–ï–ù–ò–¢–¨ –°–í–ï–†–¢–û–ß–ù–´–ô –§–ò–õ–¨–¢–†", use_container_width=True, type="primary"):
            try:
                if not kernel_input.strip():
                    st.error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –º–∞—Ç—Ä–∏—Ü—É!")
                    return

                kernel_values = [float(x.strip()) for x in kernel_input.split(',')]

                if len(kernel_values) != 9:
                    st.error("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–≤–Ω–æ 9 –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!")
                    return

                if all(abs(x) < 0.0001 for x in kernel_values):
                    st.error("‚ùå –ú–∞—Ç—Ä–∏—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤–æ–π!")
                    return

                kernel = np.array(kernel_values).reshape(3, 3)
                st.session_state.kernel = kernel
                st.session_state.current_filter = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π"

                with st.spinner("üîé –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–≤–µ—Ä—Ç–æ—á–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä..."):
                    processed_path = enhance_video(uploaded_file, kernel)

                col1, col2 = st.columns(2)
                with col1:
                    st.subheader("–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ")
                    st.video(uploaded_file)

                with col2:
                    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                    st.video(processed_path)

                    with open(processed_path, "rb") as f:
                        st.download_button(
                            label="üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
                            data=f,
                            file_name="conv_video.mp4",
                            mime="video/mp4",
                            use_container_width=True
                        )

            except Exception as e:
                st.error(f"‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")


if __name__ == "__main__":
    main()